pipeline{
    agent any
    tools {
      maven 'maven 3.8.5'
    }
    environment {
      Docker_TAG = getversion()
    }

    stages{
        stage('SCM'){
            steps{
                git credentialsId: 'github', 
                    url: 'https://github.com/nrBaskar/dockeransiblejenkins.git'
            }
        }
        
        stage('Maven Build'){
            steps{
                sh "mvn clean package"
            }
        }
         stage('Docker Build'){
            steps{
                sh "docker build . -t nrbaskar/hariapp:${Docker_TAG}"
            }
        }
        stage('Dockerhub Push'){
            steps{
                withCredentials([string(credentialsId: 'docker-hub', variable: 'dockerHubPwd')]) {
                    sh "docker login -u nrbaskar -p ${dockerHubPwd}"
                }
                
                sh "docker push nrbaskar/hariapp:${Docker_TAG}"
            }
        }
		     
        stage('docker dev server'){
            steps{
	    ansiblePlaybook credentialsId: 'dev-server', disableHostKeyChecking: true, extras: "-e DOCKER_TAG=${Docker_TAG}", installation: 'ansible', inventory: 'dev.inv', playbook: 'deploy-docker.yml'
                script {
               if (currentBuild.result == 'SUCCESS || FAILED') 
                   {
	             echo 'Hello from currentBuild is failed'
               }
               else {
                  sh " echo 'Hello from currentBuild is passed'"
}
   }
            }
        }
		
		stage('docker test server'){
            steps{
                ansiblePlaybook credentialsId: 'testing-server', disableHostKeyChecking: true, extras: "-e DOCKER_TAG=${Docker_TAG}", installation: 'ansible', inventory: 'test.inv', playbook: 'deploy_test.yml'
                
            }
        }
    }
}

def getversion(){
    def commithash = sh label: '', returnStdout: true, script: 'git rev-parse --short HEAD'
    return commithash
    
}

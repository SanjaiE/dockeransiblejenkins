/** Function to send Email*/
def sendEmail(emailSubject, emailBody, recipients, hasAttachment) {
    print '...........................Sending Email..................................'    
    if(hasAttachment){
        emailext (subject: emailSubject, attachmentsPattern: '**/*.diff',  mimeType: 'text/html', body: emailBody, to: recipients);
    } else {
        emailext (subject: emailSubject, mimeType: 'text/html', body: emailBody, to: recipients);
    }
}

node {

      stage("checkout") {
        git url: 'https://github.com/nrBaskar/dockeransiblejenkins.git'
      }
stage("last-changes") {
def publisher = LastChanges.getLastChangesPublisher "PREVIOUS_REVISION", "SIDE", "LINE", true, true, "", "", "", "", ""
publisher.publishLastChanges()
def changes = publisher.getLastChanges()
println(changes.getEscapedDiff())
     for (commit in changes.getCommits()) {
                  println(commit)
                  def commitInfo = commit.getCommitInfo()
                  println(commitInfo.getCommitterName())
                  println(commitInfo.getCommitDate())
                  println(commitInfo.getCommitMessage())
                  println(commit.getChanges())
                  println(commitInfo)
                  print '........----------------====================-------------------...........'
}
}
/** config*/
def TESTERS = "${env.TEST_USER}"
def JOB_NAME = "${env.JOB_NAME}"
def Commit_Id = "${env.commit_Id}"

    /** Pipeline steps begin **/

      try{
	  		stage('Notify All') {
				
			
            def emailSubject = "Jenkins Notification: Trigger for Docker Ansible Build ID #${BUILD_NUMBER}";
                    def emailBody = """
                        <p>Hi Devops Team,</p>
                        <p>Jenkins File Deployment Process for mail_notification is Success : 
                        <p>Please find the last commit details below:</p>
                        <p>See attached diff of <b>${env.JOB_NAME} #${BUILD_NUMBER}</b>.</p>
						<p>Commit Id Number of <b>${env.commit_Id}
                    <p>With Regards,</p>
                    <p>Sify Jenkins Admin</p>"""
                    def recipients = TESTERS
                    sendEmail(emailSubject, emailBody, recipients, true);
               }
			}	
			
			
						
		catch(err) {
                        print "========Sending failure email ===================="                      
                        def emailSubject = "Jenkins Notification: Mail Notification for Build ID #${BUILD_NUMBER} has failed"
                        def emailBody = """
                        <p>Hi Testing Team,</p>
                        <p>Your last deployment failed due to error: ${err}</p>
                        <p>With Regards,</p>
                        <p>Sify Jenkins</p>
                        """
                        def recipients = TESTERS
                        sendEmail(emailSubject, emailBody, recipients, false);
                    }
                }

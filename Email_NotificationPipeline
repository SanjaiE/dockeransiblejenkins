/** Function to send Email*/
def sendEmail(emailSubject, emailBody, recipients, hasAttachment) {
    print '...........................Sending Email..................................'    
    if(hasAttachment){
        emailext (subject: emailSubject, attachmentsPattern: '**/*.diff',  mimeType: 'text/html', body: emailBody, to: recipients);
    } else {
        emailext (subject: emailSubject, mimeType: 'text/html', body: emailBody, to: recipients);
    }
}
/** config*/
def TESTERS = "${env.TEST_USER}"

/** Pipeline steps begin **/
node {
      try{
	  		stage('Notify All') {
			cleanWs() 		         
            def emailSubject = "Jenkins Notification: Testing pipeline triggered for Build ID #${BUILD_NUMBER}";
                    def emailBody = """
                        <p>Hi Tesing Team,</p>
                        <p>The Testing pipeline has been triggered from Repo: 
                        <p>Please find the last commit details below:</p>
                        <p>See attached diff of <b>${env.JOB_NAME} #${BUILD_NUMBER}</b>.</p>
                    <p>With Regards,</p>
                    <p>Sify Jenkins Admin</p>"""
                    def recipients = TESTERS
                    sendEmail(emailSubject, emailBody, recipients, true);
               }
			}	
			
		catch(err) {
                        print "========Sending failure email ===================="                      
                        def emailSubject = "Jenkins Notification: Testing deployment for Build ID #${BUILD_NUMBER} has failed"
                        def emailBody = """
                        <p>Hi Testing Team,</p>
                        <p>Your last deployment failed due to error: ${err}</p>
                        <p>With Regards,</p>
                        <p>Sify Jenkins</p>
                        """
                        def recipients = TESTERS
                        sendEmail(emailSubject, emailBody, recipients, false);
                    }
                }
